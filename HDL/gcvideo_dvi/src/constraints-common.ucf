# ------------------------------------------------------------------ -*- conf -*-
# GCVideo DVI HDL
# Copyright (C) 2014-2020, Ingo Korb <ingo@akana.de>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
#
# constraints-common.ucf: Common constraints for all versions
#
# -------------------------------------------------------------------------------

# video output
NET "DVI_Clock[0]" IOSTANDARD = TMDS_33;
NET "DVI_Clock[1]" IOSTANDARD = TMDS_33;
NET "DVI_Red[0]"   IOSTANDARD = TMDS_33;
NET "DVI_Red[1]"   IOSTANDARD = TMDS_33;
NET "DVI_Green[0]" IOSTANDARD = TMDS_33;
NET "DVI_Green[1]" IOSTANDARD = TMDS_33;
NET "DVI_Blue[0]"  IOSTANDARD = TMDS_33;
NET "DVI_Blue[1]"  IOSTANDARD = TMDS_33;

# Gamecube/Wii digital video port
NET "CableDetect" IOSTANDARD = LVCMOS33;
NET "CSel"        OFFSET = IN 5 ns VALID 12 ns BEFORE "VClockN" LOW;
#ifndef dual-wii
NET "VData[0]"    OFFSET = IN 5 ns VALID 12 ns BEFORE "VClockN" LOW;
#endif
NET "VData[1]"    OFFSET = IN 5 ns VALID 12 ns BEFORE "VClockN" LOW;
NET "VData[2]"    OFFSET = IN 5 ns VALID 12 ns BEFORE "VClockN" LOW;
NET "VData[3]"    OFFSET = IN 5 ns VALID 12 ns BEFORE "VClockN" LOW;
NET "VData[4]"    OFFSET = IN 5 ns VALID 12 ns BEFORE "VClockN" LOW;
NET "VData[5]"    OFFSET = IN 5 ns VALID 12 ns BEFORE "VClockN" LOW;
NET "VData[6]"    OFFSET = IN 5 ns VALID 12 ns BEFORE "VClockN" LOW;
NET "VData[7]"    OFFSET = IN 5 ns VALID 12 ns BEFORE "VClockN" LOW;

NET "VClockN" TNM_NET = "CLOCK_54";
TIMESPEC TS_CLOCK_54 = PERIOD "CLOCK_54" 54 MHz HIGH 50 %;

# Controller
NET "PadData"     IOSTANDARD = LVCMOS33 | PULLUP = FALSE;

# IR Receiver
NET "IRReceiver"  IOSTANDARD = LVCMOS33 | PULLUP = TRUE;
NET "IRButton"    IOSTANDARD = LVCMOS33 | PULLUP = TRUE;

# SPI flash
NET "Flash_COPI"  LOC = P46 | IOSTANDARD = LVCMOS33;
NET "Flash_CIPO"  LOC = P51 | IOSTANDARD = LVCMOS33 | PULLUP = TRUE;
NET "Flash_SCK"   LOC = P53 | IOSTANDARD = LVCMOS33;
NET "Flash_SEL"   LOC = P27 | IOSTANDARD = LVCMOS33;

# Audio
NET "SPDIF_Out"   IOSTANDARD = LVCMOS33;

